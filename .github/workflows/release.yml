name: GitHub Release

# We run the tests on master, development and for PR's.
on:
  push:
    tags:
      - "[0-9]+"

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle files
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: release-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            release-${{ runner.os }}-gradle-
      - name: Set up secrets.properties
        run: echo "$SECRETS_PROPERTIES_BASE64" | base64 --decode > app/secrets.properties
        env:
          $SECRETS_PROPERTIES_BASE64: ${{ secrets.SECRETS_PROPERTIES_BASE64 }}
      - name: Build APK with Gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: assembleRelease
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_release
        with:
          releaseDirectory: ./app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Create release
        uses: actions/create-release@v1.0.0
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          prerelease: true
      - name: Upload APK
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_release.outputs.signedReleaseFile }}
          asset_name: hydra.apk
          asset_content_type: application/vnd.android.package-archive
