package be.ugent.zeus.hydra.activities.common;

import android.os.Bundle;
import android.support.v4.content.Loader;
import be.ugent.zeus.hydra.loader.CachedAsyncTaskLoader;
import be.ugent.zeus.hydra.loader.ErrorLoaderCallback;
import be.ugent.zeus.hydra.loader.ThrowableEither;

import java.io.Serializable;

/**
 * Activity that uses the {@link be.ugent.zeus.hydra.loader.CachedAsyncTaskLoader}.
 *
 * @author Niko Strijbol
 */
public abstract class LoaderToolbarActivity<D extends Serializable> extends ToolbarActivity implements ErrorLoaderCallback<D> {

    // ID of the loader.
    protected static final int LOADER = 0;

    /**
     * Called when a previously created loader is being reset, and thus making its data unavailable.  The application
     * should at this point remove any references it has to the Loader's data.
     *
     * @param loader The Loader that is being reset.
     */
    @Override
    public void onLoaderReset(Loader<ThrowableEither<D>> loader) {
        loader.reset();
    }

    /**
     * Called when a previously created loader has finished its load.
     *
     * @param loader The Loader that has finished.
     * @param data   The data generated by the Loader.
     */
    @Override
    public void onLoadFinished(Loader<ThrowableEither<D>> loader, ThrowableEither<D> data) {
        if(data.hasError()) {
            receiveError(data.getError());
        } else {
            receiveData(data.getData());
        }
    }

    /**
     * Instantiate and return a new Loader for the given ID.
     *
     * @param id   The ID whose loader is to be created.
     * @param args Any arguments supplied by the caller.
     *
     * @return Return a new Loader instance that is ready to start loading.
     */
    @Override
    public Loader<ThrowableEither<D>> onCreateLoader(int id, Bundle args) {
        return new CachedAsyncTaskLoader<>(getRequest(), getApplicationContext());
    }

    /**
     * Start the loader.
     */
    protected void startLoader() {
        // Start the data loader.
        getSupportLoaderManager().initLoader(LOADER, null, this);
    }

    /**
     * Restart the loader.
     */
    protected void restartLoader() {
        // Start the data loader.
        getSupportLoaderManager().restartLoader(LOADER, null, this);
    }
}